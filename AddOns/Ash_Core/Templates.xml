<Ui xmlns="http://www.blizzard.com/wow/ui/"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xsi:schemaLocation="http://www.blizzard.com/wow/ui/">
	<Frame name="Ash_CoreMenuTemplate" hidden="true" parent="UIParent" enableMouse="true" movable="true" frameStrata="MEDIUM" virtual="true">
		<TitleRegion setAllPoints="true"/>
		<Anchors> 
			<Anchor point="CENTER"/>
		</Anchors>
		<Layers>
			<Layer level="BACKGROUND">
				<FontString name="$parentTitle" inherits="GameFontHighlight">
					<Anchors>
						<Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT">
							<Offset>
								<AbsDimension x="9" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Backdrop bgFile="Interface\Tooltips\UI-Tooltip-Background" edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="16"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Scripts>
			<OnLoad>
				this:SetBackdropBorderColor(0.4, 0.4, 0.4);
				this:SetBackdropColor(0.5, 0.5, 0.5);
				table.insert(UISpecialFrames,this:GetName())
			</OnLoad>
		</Scripts>
	</Frame>
	<CheckButton name="Ash_CoreCheckButtonTemplate" virtual="true">
		<Size>
			<AbsDimension x="32" y="32"/>
		</Size>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentTitle" inherits="GameFontNormalSmall">
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentLargeTitle" inherits="GameFontNormal">
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
		<PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
		<HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
		<CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
		<DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
		<Scripts>
			<OnEnter>
				if this.tooltipText then
					GameTooltip:SetOwner(this, "ANCHOR_RIGHT");
					GameTooltip:SetText(this.tooltipText, nil, nil, nil, nil, 1);
				end
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>
	</CheckButton>
	<Slider name="Ash_CoreSliderTemplate" virtual="true" orientation="HORIZONTAL" enableMouse="true">
		<Size>
			<AbsDimension x="128" y="17"/>
		</Size>
		<HitRectInsets>
			<AbsInset left="0" right="0" top="-10" bottom="-10"/>
		</HitRectInsets>
		<Backdrop bgFile="Interface\Buttons\UI-SliderBar-Background" edgeFile="Interface\Buttons\UI-SliderBar-Border" tile="true">
			<EdgeSize>
				<AbsValue val="8"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="8"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="3" right="3" top="6" bottom="6"/>
			</BackgroundInsets>
		</Backdrop>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentTitle" inherits="GameFontNormalSmall">
					<Anchors>
						<Anchor point="BOTTOM" relativePoint="TOP">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentLargeTitle" inherits="GameFontNormal">
					<Anchors>
						<Anchor point="BOTTOM" relativePoint="TOP">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentLow" inherits="GameFontHighlightSmall">
					<Anchors>
						<Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT">
							<Offset>
								<AbsDimension x="2" y="3"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentHigh" inherits="GameFontHighlightSmall">
					<Anchors>
						<Anchor point="TOPRIGHT" relativePoint="BOTTOMRIGHT">
							<Offset>
								<AbsDimension x="-2" y="3"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentValue" inherits="GameFontHighlightSmall">
					<Anchors>
						<Anchor point="TOP" relativePoint="BOTTOM">
							<Offset>
								<AbsDimension x="0" y="3"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnEnter>
				if this.tooltipText then
					GameTooltip:SetOwner(this, "ANCHOR_RIGHT");
					GameTooltip:SetText(this.tooltipText, nil, nil, nil, nil, 1);
				end
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>
		<ThumbTexture name="$parentThumb" file="Interface\Buttons\UI-SliderBar-Button-Horizontal">
			<Size>
				<AbsDimension x="32" y="32"/>
			</Size>
		</ThumbTexture>
	</Slider>
	<Button name="Ash_CoreButtonTemplate" virtual="true">
		<Size>
			<AbsDimension x="120" y="21"/>
		</Size>
		<ButtonText name="$parentTitle"/>
		<NormalFont inherits="GameFontNormal"/>
		<HighlightFont inherits="GameFontHighlight"/>
		<DisabledFont inherits="GameFontDisable"/>
		<NormalTexture inherits="UIPanelButtonUpTexture"/>
		<PushedTexture inherits="UIPanelButtonDownTexture"/>
		<DisabledTexture inherits="UIPanelButtonDisabledTexture"/>
		<HighlightTexture inherits="UIPanelButtonHighlightTexture"/>
		<Scripts>
			<OnEnter>
				if this.tooltipText then
					GameTooltip:SetOwner(this, "ANCHOR_RIGHT");
					GameTooltip:SetText(this.tooltipText, nil, nil, nil, nil, 1);
				end
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>			
	</Button>
	<EditBox name="Ash_CoreEditBoxTemplate" enableMouse="true" virtual="true" autoFocus="false">
		<Size>
			<AbsDimension x="100" y="30"/>
		</Size>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture name="$parentLeft" file="Interface\Common\Common-Input-Border">
					<Size>
						<AbsDimension x="8" y="20"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT"/>
					</Anchors>
					<TexCoords left="0" right="0.0625" top="0" bottom="0.625"/>
				</Texture>
				<Texture name="$parentRight" file="Interface\Common\Common-Input-Border">
					<Size>
						<AbsDimension x="8" y="20"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0.9375" right="1.0" top="0" bottom="0.625"/>
				</Texture>
				<Texture name="$parentMiddle" file="Interface\Common\Common-Input-Border">
					<Size>
						<AbsDimension x="10" y="20"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT"/>
						<Anchor point="RIGHT" relativeTo="$parentRight" relativePoint="LEFT"/>
					</Anchors>
					<TexCoords left="0.0625" right="0.9375" top="0" bottom="0.625"/>
				</Texture>
				<FontString name="$parentTitle" inherits="GameFontNormalSmall">
					<Anchors>
						<Anchor point="BOTTOM" relativePoint="TOP">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentLargeTitle" inherits="GameFontNormal">
					<Anchors>
						<Anchor point="BOTTOM" relativePoint="TOP">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnEnter>
				if this.tooltipText then
					GameTooltip:SetOwner(this, "ANCHOR_RIGHT");
					GameTooltip:SetText(this.tooltipText, nil, nil, nil, nil, 1);
				end
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>
		<FontString inherits="ChatFontNormal"/>
	</EditBox>
	<Button name="Ash_CoreColorSwatchTemplate" virtual="true">
		<Size>
			<AbsDimension x="16" y="16"/>
		</Size>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture name="$parentSwatchBg">
					<Size>
						<AbsDimension x="14" y="14"/>
					</Size>
					<Anchors>
						<Anchor point="CENTER">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
					<Color r="1.0" g="1.0" b="1.0"/>
				</Texture>
			</Layer>
			<Layer level="ARTWORK">
				<FontString name="$parentTitle" inherits="GameFontNormalSmall" justifyH="CENTER" justifyV="CENTER">
					<Anchors>
						<Anchor point="RIGHT" relativePoint="LEFT">
							<Offset>
								<AbsDimension x="-5" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parentLargeTitle" inherits="GameFontNormal" justifyH="CENTER" justifyV="CENTER">
					<Anchors>
						<Anchor point="RIGHT" relativePoint="LEFT">
							<Offset>
								<AbsDimension x="-5" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnClick>
				local frame = this
				DropDownLibColorPicker.func = function() 
					local r,g,b = DropDownLibColorPicker:GetColorRGB()
					getglobal(frame:GetName().."NormalTexture"):SetVertexColor(r,g,b)
				end
				local r,g,b = getglobal(this:GetName().."NormalTexture"):GetVertexColor()
				DropDownLibColorPicker:SetColorRGB(r, g, b)
				DropDownLibColorPicker.previousValues = {r = r, g = g, b = b}
				DropDownLibColorPicker.cancelFunc = function(prevvables)
					getglobal(frame:GetName().."NormalTexture"):SetVertexColor(prevvables.r,prevvables.g,prevvables.b)
				end
				ShowUIPanel(DropDownLibColorPicker)
			</OnClick>
			<OnEnter>
				getglobal(this:GetName().."SwatchBg"):SetVertexColor(NORMAL_FONT_COLOR.r, NORMAL_FONT_COLOR.g, NORMAL_FONT_COLOR.b);
				if this.tooltipText then
					GameTooltip:SetOwner(this, "ANCHOR_RIGHT");
					GameTooltip:SetText(this.tooltipText, nil, nil, nil, nil, 1);
				end
			</OnEnter>
			<OnLeave>
				getglobal(this:GetName().."SwatchBg"):SetVertexColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b);
				GameTooltip:Hide()
			</OnLeave>
		</Scripts>
		<NormalTexture name="$parentNormalTexture" file="Interface\ChatFrame\ChatFrameColorSwatch"/>
	</Button>
	<GameTooltip name="SpellSystemScanningFrame" inherits="GameTooltipTemplate"/>
	<Button name="DropDownLibButtonTemplate" virtual="true">
		<Size>
			<AbsDimension x="100" y="16"/>
		</Size>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture name="$parentHighlight" file="Interface\QuestFrame\UI-QuestTitleHighlight" alphaMode="ADD" setAllPoints="true" hidden="true"/>
			</Layer>
			<Layer level="ARTWORK">
				<Texture name="$parentCheck" file="Interface\Buttons\UI-CheckBox-Check">
					<Size>
						<AbsDimension x="24" y="24"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</Texture>
				<Texture name="$parentIcon" hidden="true">
					<Size>
						<AbsDimension x="15" y="15"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT">
							<Offset>
								<AbsDimension x="-5" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<Frames>
			<Button name="$parentColorSwatch" hidden="true">
				<Size>
					<AbsDimension x="16" y="16"/>
				</Size>
				<Anchors>
					<Anchor point="RIGHT">
						<Offset>
							<AbsDimension x="-6" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture name="$parentSwatchBg">
							<Size>
								<AbsDimension x="14" y="14"/>
							</Size>
							<Anchors>
								<Anchor point="CENTER">
									<Offset>
										<AbsDimension x="0" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
							<Color r="1.0" g="1.0" b="1.0"/>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnClick>
						DropDownLib:CloseDropDownMenus();
						DropDownLib:OpenColorPicker(this:GetParent());
					</OnClick>
					<OnEnter>
						DropDownLib:CloseDropDownMenus(this:GetParent():GetParent():GetID() + 1);
						getglobal(this:GetName().."SwatchBg"):SetVertexColor(NORMAL_FONT_COLOR.r, NORMAL_FONT_COLOR.g, NORMAL_FONT_COLOR.b);
						DropDownLib:StopCounting(this:GetParent():GetParent());
					</OnEnter>
					<OnLeave>
						getglobal(this:GetName().."SwatchBg"):SetVertexColor(HIGHLIGHT_FONT_COLOR.r, HIGHLIGHT_FONT_COLOR.g, HIGHLIGHT_FONT_COLOR.b);
						DropDownLib:StartCounting(this:GetParent():GetParent());
					</OnLeave>
				</Scripts>
				<NormalTexture name="$parentNormalTexture" file="Interface\ChatFrame\ChatFrameColorSwatch"/>
			</Button>
			<Button name="$parentExpandArrow" hidden="true">
				<Size>
					<AbsDimension x="16" y="16"/>
				</Size>
				<Anchors>
					<Anchor point="RIGHT">
						<Offset>
							<AbsDimension x="-6" y="0"/>
						</Offset>
					</Anchor>                   
				</Anchors>
				<Scripts>
					<OnClick>
						DropDownLib:ToggleDropDownMenu(this:GetParent():GetParent():GetID() + 1, this:GetParent().value);
					</OnClick>
					<OnEnter>
						DropDownLib:ToggleDropDownMenu(this:GetParent():GetParent():GetID() + 1, this:GetParent().value);
						DropDownLib:StopCounting(this:GetParent():GetParent());
					</OnEnter>
					<OnLeave>
						DropDownLib:StartCounting(this:GetParent():GetParent());
					</OnLeave>
				</Scripts>
				<NormalTexture file="Interface\ChatFrame\ChatFrameExpandArrow"/>
			</Button>
			<Button name="$parentInvisibleButton" hidden="true">
				<Anchors>
					<Anchor point="TOPLEFT"/>
					<Anchor point="BOTTOMLEFT"/>
					<Anchor point="RIGHT" relativeTo="$parentColorSwatch" relativePoint="LEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						DropDownLib:StopCounting(this:GetParent():GetParent());
						DropDownLib:CloseDropDownMenus(this:GetParent():GetParent():GetID() + 1);
					</OnEnter>
					<OnLeave>
						DropDownLib:StartCounting(this:GetParent():GetParent());
					</OnLeave>
				</Scripts>
			</Button>
		</Frames>
		<Scripts>
			<OnClick>
				DropDownLib:OnButtonClick();
			</OnClick>
			<OnEnter>
				if ( this.hasArrow ) then
					DropDownLib:ToggleDropDownMenu(this:GetParent():GetID() + 1, this.value);
				else
					DropDownLib:CloseDropDownMenus(this:GetParent():GetID() + 1);
				end
				getglobal(this:GetName().."Highlight"):Show();
				DropDownLib:StopCounting(this:GetParent());
				if ( this.tooltipTitle ) then
					GameTooltip:SetOwner(this,"ANCHOR_RIGHT")
					GameTooltip:AddLine(this.tooltipTitle,1,1,1,1)
					GameTooltip:AddLine(this.tooltipText,NORMAL_FONT_COLOR.r,NORMAL_FONT_COLOR.g,NORMAL_FONT_COLOR.b,1)
					GameTooltip:Show()
				end
			</OnEnter>
			<OnLeave>
				getglobal(this:GetName().."Highlight"):Hide();
				DropDownLib:StartCounting(this:GetParent());
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>
		<ButtonText name="$parentNormalText"/>
		<NormalFont inherits="GameFontHighlightSmall" justifyH="LEFT"/>
		<HighlightFont inherits="GameFontHighlightSmall" justifyH="LEFT"/>
		<DisabledFont inherits="GameFontDisableSmall" justifyH="LEFT"/>
	</Button>
	<Button name="DropDownLibListTemplate" hidden="true" frameStrata="DIALOG" enableMouse="true" virtual="true">
		<Frames>
			<Frame name="$parentBackdrop" setAllPoints="true">
				<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
					<BackgroundInsets>
						<AbsInset left="11" right="12" top="12" bottom="11"/>
					</BackgroundInsets>
					<TileSize>
						<AbsValue val="32"/>
					</TileSize>
					<EdgeSize>
						<AbsValue val="32"/>
					</EdgeSize>
				</Backdrop>
			</Frame>
			<Frame name="$parentMenuBackdrop" setAllPoints="true">
				<Backdrop bgFile="Interface\Tooltips\UI-Tooltip-Background" edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
					<EdgeSize>
						<AbsValue val="16"/>
					</EdgeSize>
					<TileSize>
						<AbsValue val="16"/>
					</TileSize>
					<BackgroundInsets>
						<AbsInset left="5" right="5" top="5" bottom="5"/>
					</BackgroundInsets>
				</Backdrop>
				<Scripts>
					<OnLoad>
						this:SetBackdropBorderColor(TOOLTIP_DEFAULT_COLOR.r, TOOLTIP_DEFAULT_COLOR.g, TOOLTIP_DEFAULT_COLOR.b);
						this:SetBackdropColor(TOOLTIP_DEFAULT_BACKGROUND_COLOR.r, TOOLTIP_DEFAULT_BACKGROUND_COLOR.g, TOOLTIP_DEFAULT_BACKGROUND_COLOR.b);
					</OnLoad>
				</Scripts>
			</Frame>
			<Button name="$parentButton1" inherits="DropDownLibButtonTemplate" id="1"/>
			<Button name="$parentButton2" inherits="DropDownLibButtonTemplate" id="2"/>
			<Button name="$parentButton3" inherits="DropDownLibButtonTemplate" id="3"/>
			<Button name="$parentButton4" inherits="DropDownLibButtonTemplate" id="4"/>
			<Button name="$parentButton5" inherits="DropDownLibButtonTemplate" id="5"/>
			<Button name="$parentButton6" inherits="DropDownLibButtonTemplate" id="6"/>
			<Button name="$parentButton7" inherits="DropDownLibButtonTemplate" id="7"/>
			<Button name="$parentButton8" inherits="DropDownLibButtonTemplate" id="8"/>
		</Frames>
		<Scripts>
			<OnClick>
				this:Hide();
			</OnClick>
			<OnEnter>
				DropDownLib:StopCounting(this);
			</OnEnter>
			<OnLeave>
				DropDownLib:StartCounting(this);
			</OnLeave>
			<OnUpdate>
				DropDownLib:OnUpdate(arg1);
			</OnUpdate>
			<OnShow>
				for i=1, DropDownLib:MaxButtons() do
					if (not this.noResize) then
						getglobal(this:GetName().."Button"..i):SetWidth(this.maxWidth);
					end
				end
				if (not this.noResize) then
					this:SetWidth(this.maxWidth+25);
				end
				this.showTime = nil;
				if ( this:GetID() > 1 ) then
					this.parent = getglobal("DropDownLibList"..(this:GetID() - 1));
				end
			</OnShow>
		</Scripts>
	</Button>
	<Frame name="DropDownLibTemplate" virtual="true">
		<Size>
			<AbsDimension x="40" y="32"/>
		</Size>
		<Layers>
			<Layer level="ARTWORK">
				<Texture name="$parentLeft" file="Interface\Glues\CharacterCreate\CharacterCreate-LabelFrame">
					<Size>
						<AbsDimension x="25" y="64"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="-17" y="10"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0" right="0.1953125" top="0" bottom="1"/>
				</Texture>
				<Texture name="$parentMiddle" file="Interface\Glues\CharacterCreate\CharacterCreate-LabelFrame">
					<Size>
						<AbsDimension x="115" y="64"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT"/>
					</Anchors>
					<TexCoords left="0.1953125" right="0.8046875" top="0" bottom="1"/>
				</Texture>
				<Texture name="$parentRight" file="Interface\Glues\CharacterCreate\CharacterCreate-LabelFrame">
					<Size>
						<AbsDimension x="25" y="64"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentMiddle" relativePoint="RIGHT"/>
					</Anchors>
					<TexCoords left="0.8046875" right="1" top="0" bottom="1"/>
				</Texture>
				<FontString name="$parentText" inherits="GameFontHighlightSmall" justifyH="RIGHT">
					<Size>
						<AbsDimension x="0" y="10"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT" relativeTo="$parentRight">
							<Offset>
								<AbsDimension x="-40" y="2"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
			<Layer level="BACKGROUND">
				<FontString name="$parentTitle" inherits="GameFontNormalSmall">
					<Anchors>
						<Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT">
							<Offset>
								<AbsDimension x="3" y="-5"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<Button name="$parentButton">
				<Size>
					<AbsDimension x="24" y="24"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="$parentRight">
						<Offset>
							<AbsDimension x="-16" y="-18"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						DropDownLib:ToggleDropDownMenu();
						PlaySound("igMainMenuOptionCheckBoxOn");
					</OnClick>
				</Scripts>
				<NormalTexture name="$parentNormalTexture" file="Interface\ChatFrame\UI-ChatIcon-ScrollDown-Up">
					<Size>
						<AbsDimension x="24" y="24"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT"/>
					</Anchors>
				</NormalTexture>
				<PushedTexture name="$parentPushedTexture" file="Interface\ChatFrame\UI-ChatIcon-ScrollDown-Down">
					<Size>
						<AbsDimension x="24" y="24"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT"/>
					</Anchors>
				</PushedTexture>
				<DisabledTexture name="$parentDisabledTexture" file="Interface\ChatFrame\UI-ChatIcon-ScrollDown-Disabled">
					<Size>
						<AbsDimension x="24" y="24"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT"/>
					</Anchors>
				</DisabledTexture>
				<HighlightTexture name="$parentHighlightTexture" file="Interface\Buttons\UI-Common-MouseHilight" alphaMode="ADD">
					<Size>
						<AbsDimension x="24" y="24"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT"/>
					</Anchors>
				</HighlightTexture>
			</Button>
		</Frames>
		<Scripts>
			<OnHide>
				DropDownLib:CloseDropDownMenus();
			</OnHide>
			<OnEnter>
				if this.tooltipText then
					GameTooltip:SetOwner(this, "ANCHOR_RIGHT");
					GameTooltip:SetText(this.tooltipText, nil, nil, nil, nil, 1);
				end
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>
	</Frame>
	<Button name="DropDownLibList1" toplevel="true" frameStrata="FULLSCREEN_DIALOG" inherits="DropDownLibListTemplate" hidden="true" id="1">
		<Size>
			<AbsDimension x="180" y="10"/>
		</Size>
		<Scripts>
			<OnHide>
				DropDownLib:OnHide();
			</OnHide>
		</Scripts>
	</Button>
	<Button name="DropDownLibList2" toplevel="true" frameStrata="FULLSCREEN_DIALOG" inherits="DropDownLibListTemplate" hidden="true" id="2">
		<Size>
			<AbsDimension x="180" y="10"/>
		</Size>
		<Scripts>
			<OnHide>
				DropDownLib:OnHide();
			</OnHide>
		</Scripts>
	</Button>
	<ColorSelect name="DropDownLibColorPicker" toplevel="true" parent="UIParent" movable="true" enableMouse="true" enableKeyboard="true" hidden="true">
		<Size>
			<AbsDimension x="365" y="200"/>
		</Size>
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11"/>
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="32"/>
			</TileSize>
			<EdgeSize>
				<AbsValue val="32"/>
			</EdgeSize>
		</Backdrop>
		<Layers>
			<Layer level="ARTWORK">
				<Texture name="DropDownLibColorPickerColorSwatch">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="225" y="-32"/>
							</Offset>
						</Anchor>
					</Anchors>
					<Color r="1.0" g="1.0" b="1.0" a="1.0"/>
				</Texture>
				<Texture name="DropDownLibColorPickerHeader" file="Interface\DialogFrame\UI-DialogBox-Header">
					<Size>
						<AbsDimension x="256" y="64"/>
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="12"/>
							</Offset>
						</Anchor>
					</Anchors>
				</Texture>
				<FontString inherits="GameFontNormal" text="COLOR_PICKER">
					<Anchors>
						<Anchor point="TOP" relativeTo="DropDownLibColorPickerHeader">
							<Offset>
								<AbsDimension x="0" y="-14"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<Button name="DropDownLibColorPickerCancelButton" inherits="GameMenuButtonTemplate" text="CANCEL">
				<Anchors>
					<Anchor point="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="-10" y="10"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						HideUIPanel(this:GetParent());
						if ( DropDownLibColorPicker.cancelFunc ) then
							DropDownLibColorPicker.cancelFunc(DropDownLibColorPicker.previousValues);
						end
						PlaySound("igMainMenuOptionCheckBoxOn");
					</OnClick>
				</Scripts>
			</Button>
			<Button name="DropDownLibColorPickerOkayButton" inherits="GameMenuButtonTemplate" text="OKAY">
				<Anchors>
					<Anchor point="RIGHT" relativeTo="DropDownLibColorPickerCancelButton" relativePoint="LEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						HideUIPanel(this:GetParent());
						if DropDownLibColorPicker.func then
							DropDownLibColorPicker.func();
						end
						if ( DropDownLibColorPicker.opacityFunc ) then
							DropDownLibColorPicker.opacityFunc();
						end
						PlaySound("igMainMenuOptionCheckBoxOn");
					</OnClick>
				</Scripts>
			</Button>
			<Slider name="DropDownLibColorPickerOpacitySliderFrame" orientation="VERTICAL" minValue="0" maxValue="1" valueStep="0.01" defaultValue="1">
				<Size>
					<AbsDimension x="16" y="128"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="DropDownLibColorPickerColorSwatch" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="32" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Backdrop bgFile="Interface\Buttons\UI-SliderBar-Background" edgeFile="Interface\Buttons\UI-SliderBar-Border" tile="true">
					<EdgeSize>
						<AbsValue val="8"/>
					</EdgeSize>
					<TileSize>
						<AbsValue val="8"/>
					</TileSize>
					<BackgroundInsets>
						<AbsInset left="3" right="3" top="6" bottom="6"/>
					</BackgroundInsets>
				</Backdrop>
				<Layers>
					<Layer level="ARTWORK">
						<FontString name="DropDownLibColorPickerOpacitySliderFrameText" inherits="GameFontNormalSmall">
							<Anchors>
								<Anchor point="BOTTOM" relativePoint="TOP"/>
							</Anchors>
						</FontString>
						<FontString inherits="GameFontHighlightSmall" text="0%">
							<Anchors>
								<Anchor point="BOTTOMLEFT" relativePoint="BOTTOMRIGHT">
									<Offset>
										<AbsDimension x="2" y="3"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
						<FontString inherits="GameFontHighlightSmall" text="100%">
							<Anchors>
								<Anchor point="TOPLEFT" relativePoint="TOPRIGHT">
									<Offset>
										<AbsDimension x="-2" y="3"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
					</Layer>
				</Layers>
				<Scripts>
					<OnValueChanged>
						if ( DropDownLibColorPicker.opacityFunc ) then
							DropDownLibColorPicker.opacityFunc();
						end
					</OnValueChanged>
				</Scripts>
				<ThumbTexture file="Interface\Buttons\UI-SliderBar-Button-Vertical">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
				</ThumbTexture>
			</Slider>
		</Frames>
		<Scripts>
			<OnShow>
				if ( this.hasOpacity ) then
					DropDownLibColorPickerOpacitySliderFrame:Show();
					DropDownLibColorPickerOpacitySliderFrame:SetValue(this.opacity);
					this:SetWidth(365);
				else
					DropDownLibColorPickerOpacitySliderFrame:Hide();
					this:SetWidth(305);
				end
			</OnShow>
			<OnColorSelect>
				DropDownLibColorPickerColorSwatch:SetTexture(arg1, arg2, arg3);
			</OnColorSelect>
			<OnKeyDown>
				if (arg1 == "ESCAPE") then
					HideUIPanel(this);
					if ( DropDownLibColorPicker.cancelFunc ) then
						DropDownLibColorPicker.cancelFunc(ColorPickerFrame.previousValues);
					end
				end
			</OnKeyDown>
		</Scripts>
		<ColorWheelTexture name="$parentColorPickerWheel">
			<Size>
				<AbsDimension x="128" y="128"/>
			</Size>
			<Anchors>
				<Anchor point="TOPLEFT">
					<Offset>
						<AbsDimension x="16" y="-32"/>
					</Offset>
				</Anchor>
			</Anchors>
		</ColorWheelTexture>
		<ColorWheelThumbTexture file="Interface\Buttons\UI-ColorPicker-Buttons">
			<Size>
				<AbsDimension x="10" y="10"/>
			</Size>
			<TexCoords left="0" right="0.15625" top="0" bottom="0.625"/>
		</ColorWheelThumbTexture>
		<ColorValueTexture>
			<Size>
				<AbsDimension x="32" y="128"/>
			</Size>
			<Anchors>
				<Anchor point="LEFT" relativeTo="DropDownLibColorPickerColorPickerWheel" relativePoint="RIGHT">
					<Offset>
						<AbsDimension x="24" y="0"/>
					</Offset>
				</Anchor>
			</Anchors>
		</ColorValueTexture>
		<ColorValueThumbTexture file="Interface\Buttons\UI-ColorPicker-Buttons">
			<Size>
				<AbsDimension x="48" y="14"/>
			</Size>
			<TexCoords left="0.25" right="1.0" top="0" bottom="0.875"/>
		</ColorValueThumbTexture>
	</ColorSelect>
	<Frame name="TimerLibTimerFrameTemplate" virtual="true">
		<Frames>
			<Frame name="$parentBar" hidden="true">
				<Anchors>
					<Anchor point="CENTER"/>
				</Anchors>
				<Frames>
					<Button name="$parentButton">
						<Size>
							<AbsDimension x="166" y="16"/>
						</Size>
						<Anchors>
							<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parent"/>
						</Anchors>
						<Layers>
							<Layer level="ARTWORK">
								<Texture name="$parentTexture">
									<Size>
										<AbsDimension x="16" y="16"/>
									</Size>
									<Anchors>
										<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parent"/>
									</Anchors>
								</Texture>
								<FontString name="$parentStack" inherits="NumberFontNormal" justifyH="RIGHT" justifyV="BOTTOM">
									<Anchors>
										<Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" relativeTo="$parentTexture">
											<Offset>
												<AbsDimension x="-1" y="1"/>
											</Offset>
										</Anchor>
									</Anchors>
									<FontHeight>
										<AbsValue val="8"/>
									</FontHeight>
								</FontString>
							</Layer>
						</Layers>
						<Scripts>
							<OnLoad> this:RegisterForClicks("AnyUp"); </OnLoad>
							<OnClick>
								local targetindex = this:GetParent():GetParent():GetParent():GetID()
								local debuffindex = this:GetParent():GetParent():GetID()
								this.self:OnTimerEvent("OnTimerClick",targetindex,debuffindex,arg1)
							</OnClick>
							<OnEnter>
								local targetindex = this:GetParent():GetParent():GetParent():GetID()
								local debuffindex = this:GetParent():GetParent():GetID()
								this.self:OnTimerEvent("OnTimerEnter",targetindex,debuffindex,this)
							</OnEnter>
							<OnLeave> GameTooltip:Hide(); </OnLeave>
						</Scripts>
					</Button>
					<StatusBar name="$parentStatus" minValue="0.0" maxValue="1.0">
						<Size>
							<AbsDimension x="150" y="16"/>
						</Size>
						<Layers>
							<Layer level="ARTWORK">
								<FontString name="$parentTime" inherits="GameFontNormal" justifyH="LEFT" justifyV="CENTER">
									<Size>
										<AbsDimension x="144" y="16"/>
									</Size>
									<Anchors>
										<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parent">
											<Offset>
												<AbsDimension x="3" y="0"/>
											</Offset>
										</Anchor>
									</Anchors>
									<Color r="1.0" g="1.0" b="1.0"/>
								</FontString>
							</Layer>
							<Layer level="OVERLAY">
								<Texture name="$parentSpark" file="Interface\CastingBar\UI-CastingBar-Spark" alphaMode="ADD">
									<Size>
										<AbsDimension x="16" y="32"/>
									</Size>
									<Anchors>
										<Anchor point="CENTER"/>
									</Anchors>
								</Texture>
							</Layer>
						</Layers>
						<BarTexture file="Interface\TargetingFrame\UI-StatusBar"/>		
					</StatusBar>
					<StatusBar name="$parentBackground" minValue="0.0" maxValue="1.0" defaultValue="1.0">
						<Size>
							<AbsDimension x="150" y="16"/>
						</Size>
						<Anchors>
							<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parentStatus"/>
						</Anchors>
						<BarTexture file="Interface\TargetingFrame\UI-StatusBar"/>
						<BarColor r=".25" g=".25" b=".25"/>
						<Scripts>
							<OnLoad> this:SetFrameLevel(this:GetFrameLevel() - 1); </OnLoad>
						</Scripts>
					</StatusBar>							
				</Frames>
			</Frame>
			<Frame name="$parentIcon" hidden="true">
				<Anchors>
					<Anchor point="TOPLEFT"/>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<FontString name="$parentTime" text="0:00" inherits="GameFontNormal" justifyH="CENTER" justifyV="CENTER"/>		
					</Layer>
				</Layers>
				<Frames>
					<Button name="$parentButton">
						<Size>
							<AbsDimension x="24" y="24"/>
						</Size>
						<Anchors>
							<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parent"/>
						</Anchors>
						<Layers>
							<Layer level="ARTWORK">
								<Texture name="$parentTexture">
									<Size>
										<AbsDimension x="24" y="24"/>
									</Size>
									<Anchors>
										<Anchor point="CENTER" relativePoint="CENTER" relativeTo="$parent"/>
									</Anchors>
								</Texture>	
								<FontString name="$parentStack" inherits="NumberFontNormal" justifyH="RIGHT" justifyV="BOTTOM">
									<Anchors>
										<Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" relativeTo="$parentTexture">
											<Offset>
												<AbsDimension x="-1" y="1"/>
											</Offset>
										</Anchor>
									</Anchors>
									<FontHeight>
										<AbsValue val="12"/>
									</FontHeight>
								</FontString>								
							</Layer>
						</Layers>
						<HighlightTexture alphaMode="ADD" file="Interface\Buttons\CheckButtonHilight"/>
						<Scripts>
							<OnLoad> this:RegisterForClicks("AnyUp"); </OnLoad>
							<OnClick>
								local targetindex = this:GetParent():GetParent():GetParent():GetID()
								local debuffindex = this:GetParent():GetParent():GetID()
								this.self:OnTimerEvent("OnTimerClick",targetindex,debuffindex,arg1)
							</OnClick>
							<OnEnter>
								local targetindex = this:GetParent():GetParent():GetParent():GetID()
								local debuffindex = this:GetParent():GetParent():GetID()
								this.self:OnTimerEvent("OnTimerEnter",targetindex,debuffindex,this)
							</OnEnter>
							<OnLeave> GameTooltip:Hide(); </OnLeave>
						</Scripts>
					</Button>
				</Frames>
			</Frame>
			<Frame name="$parentText" hidden="true">
				<Anchors>
					<Anchor point="CENTER"/>
				</Anchors>
				<Frames>
					<Button name="$parentButton">
						<Size>
							<AbsDimension x="150" y="15"/>
						</Size>
						<Layers>
							<Layer level="ARTWORK">
								<FontString name="$parentTime" inherits="GameFontNormal" justifyH="LEFT" justifyV="CENTER">
									<Size>
										<AbsDimension x="150" y="15"/>
									</Size>									
									<Anchors>
										<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parent">
											<Offset>
												<AbsDimension x="5" y="0"/>
											</Offset>
										</Anchor>
									</Anchors>
									<Color r="1.0" g="1.0" b="1.0"/>
								</FontString>
							</Layer>
						</Layers>
						<Anchors>
							<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parent"/>
						</Anchors>
						<Scripts>
							<OnLoad> this:RegisterForClicks("AnyUp"); </OnLoad>
							<OnClick>
								local targetindex = this:GetParent():GetParent():GetParent():GetID()
								local debuffindex = this:GetParent():GetParent():GetID()
								this.self:OnTimerEvent("OnTimerClick",targetindex,debuffindex,arg1)
							</OnClick>
							<OnEnter>
								local targetindex = this:GetParent():GetParent():GetParent():GetID()
								local debuffindex = this:GetParent():GetParent():GetID()
								this.self:OnTimerEvent("OnTimerEnter",targetindex,debuffindex,this)
							</OnEnter>
							<OnLeave> GameTooltip:Hide(); </OnLeave>
						</Scripts>
					</Button>				
				</Frames>
			</Frame>
		</Frames>
	</Frame>
	<Frame name="TimerLibTargetFrameTemplate" virtual="true">
		<Frames>
			<Button name="$parentName">
				<Layers>
					<Layer level="ARTWORK">
						<FontString name="$parentText" text="name" inherits="GameFontNormal" justifyH="CENTER" justifyV="TOP">
							<Anchors>
								<Anchor point="CENTER"/>
							</Anchors>
						</FontString>
					</Layer>
					<Layer level="OVERLAY">
						<Texture name="$parentIcon" file="Interface\TargetingFrame\UI-RaidTargetingIcons">
							<Size>
								<AbsDimension x="25" y="25"/>
							</Size>
							<Anchors>
								<Anchor point="CENTER">
									<Offset>
										<AbsDimension x="0" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnLoad> this:RegisterForClicks("AnyUp"); </OnLoad>
					<OnClick>
						this.self:OnTimerEvent("OnTargetClick",this:GetParent():GetID(),nil,arg1)
					</OnClick>
					<OnEnter>
						this.self:OnTimerEvent("OnTargetEnter",this:GetParent():GetID(),nil)
					</OnEnter>
					<OnLeave> GameTooltip:Hide(); </OnLeave>
				</Scripts>
			</Button>
		</Frames>
	</Frame>
	<Button name="TimerLibPositionFrameTemplate" enableMouse="true" movable="true" frameStrata="MEDIUM" toplevel="true" virtual="true">
		<Size>
			<AbsDimension x="15" y="15"/>
		</Size>
		<Layers>
			<Layer level="ARTWORK">
				<Texture file="Interface\AddOns\Ash_Core\Files\DragButton"/>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad> this:RegisterForDrag("LeftButton"); this:RegisterForClicks("AnyUp"); </OnLoad>
			<OnDragStart> 
				this:ClearAllPoints();
				this:StartMoving(); 
			</OnDragStart>
			<OnDragStop> 
				this:StopMovingOrSizing(); 
				local x = this:GetLeft()
				local y = this:GetBottom()
				this.self:Set("offsetX",x)
				this.self:Set("offsetY",y)
				this:SetPoint("BOTTOMLEFT","UIParent","BOTTOMLEFT",x,y)
			</OnDragStop>
			<OnClick> this.self:OnTimerEvent("OnDragClick",nil,nil,arg1); </OnClick>
			<OnEnter>
				this.self:OnTimerEvent("OnDragEnter",nil,nil)
			</OnEnter>
			<OnLeave> GameTooltip:Hide(); </OnLeave>
		</Scripts>
	</Button>
	<Frame name="TimerLibAnchorFrameTemplate" virtual="true">
		<Size>
			<AbsDimension x="1" y="1"/>
		</Size>
	</Frame>
</Ui>
